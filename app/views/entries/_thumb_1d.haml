/ ENTRY THUMB 1D - GENERAL

.thumb-1d{class: entry.images.blank? ? "noImage" : ""}



  .entry
    / LEFT SIDE
    .detailsTop
      %a.user{href: user_entries_path(entry.user.username)}
        .avatar{style: "background-image: url(#{avatar_image(entry.user, 32)}); background-repeat: no-repeat"}
        %p.name= entry.user.username
      .entryType{style: "background-image: url('#{entry_type_icon(entry.type, 24)}'); background-repeat: no-repeat; background-position: center;"}

    %a.left{href: user_entry_path(entry.user.username, entry)}
      / STARLIGHT
      .starlight
        .img
        %span= entry.starlight
      / only for +image
      .image{style: "background: url(#{entry.main_image._?.url(:stream_header)}) no-repeat top left"}

      %h1.title= entry.title
      / only for noimage
      %h2.titleWatermark= entry.title
      %p.text= truncate(entry.body, :length => 100)

      .divider

    / RIGHT SIDE
    %a.tagCloud{href: user_entry_path(entry.user.username, entry)}
      - entry.tags.join_to(What).limit(16).shuffle.each do |tag|
        %div{ class: "s#{tag.position.to_s}" }= tag.noun.name



    / IMAGE THUMBNAILS
    - unless (entry.images.blank? && entry.links.youtube.blank?)
      %ul.entryImages
        - entry.links.youtube.limit(5).each do |link|
          = gallery_1d_youtube(link)
        - entry.images.limit(5).each do |image|
          = gallery_1d_thumb(image)

    /EMOTIONS DETAILS & THUMBS
    - if entry.tags.emotion.first
      .emotionsWrap
        .emotions-details
          .emotionsHeader
            .img
            emotions
          = render :partial => "/entries/emotions", :locals => {emotion_tags: entry.tags.emotion}
        .emotions-thumb
          = render :partial => "/entries/emotions", :locals => {emotion_tags: entry.tags.emotion}


    / VIDEO PANEL
    - entry.links.youtube.each do |link|
      = render :partial => "entries/video", :locals => {:link => link}


    / DETAILS
    .details
      .rePost.hidden
        reposted by:
        %span.rePostBy username
      .date= time_ago_in_words(entry.created_at)

      - if entry.comments.count == 0
        .comment
          .img
          %span comment
      - else
        .comment
          .count
            .img
            = entry.comments.count
          %span comment

    .clear



  / COMMENTS
  - unless entry.comments.count == 0 || current_user.blank?
    = render :partial => "entries/comment_panel", :locals => {entry: entry}


  .clear















