/ SETTINGS PANEL
#settingsPanel.hidden.target
  .arrow

  / SHARING
  .sharing
    .defaultSharing{:'data-id' => current_user.default_sharing_level}
      %img.sharingIcon{src: '/images/icons/everyone-16.png'}
      %h2 Default sharing
      %select#sharingList.sharingList
        %option.everyone{  value: Entry::Sharing[:everyone]  } Everyone
        %option.friends{   value: Entry::Sharing[:friends]   } Friends only
        %option.anonymous{ value: Entry::Sharing[:anonymous] } Anonymous
        %option.private{   value: Entry::Sharing[:private]   } Private
    %label.hidden
      I must authorize all follow requests
      %input.authFollow{type: 'checkbox'}
    .clear

    %hr.alpha-20

    .network.wrapper
      %img{src: '/images/icons/facebook-16.png'}
      %h2 Facebook login
      .linkAccount.trigger.showhide
        Link account
      %label.target.showhide.hidden
        By default, share on Facebook
        %input.fbShare{type: 'checkbox'}
    .clear




  / SAVED LOCATIONS
  .savedLocations.wrapper

    %h2.trigger.showhide
      %img{src: '/images/icons/world-16.png'}
      Saved locations


    .wrapper.target.showhide.hidden
      .locationView
        = form_tag :user, {method: :put, remote: true, id: 'locationForm', class: 'locationForm'} do
          #locationList.locationList
            = render :partial => "layouts/location", :collection => current_user.wheres

          %label.autoLocate
            auto locate
            %input{name: 'default', value:'auto', type: 'radio'}

        .newLocation.trigger.toggle
          %img{src: '/images/icons/add-16.png'}
          new location
        .clear
        :coffeescript
          form = $('#locationForm')
          form.delegate('input', 'change', ->
            if this.value == 'auto'
              log 'auto locate!'
            else
              form.submit()
          )

      / ADD NEW LOCATION
      = form_tag location_user_path, remote: true, id: 'addLocationForm', class: 'modifyLocationView target toggle hidden' do
        -# Fields within wheres table: name, city, province, country
        = fields_for :new_location do |f|
          %span Add a new location
          = f.text_field :name, class: 'name', placeholder: 'Location name'
          = f.text_field :city, class: 'city', placeholder: 'City'
          = f.text_field :province, class: 'state', placeholder: 'State / Province'

        -# Could do to research select_tag once we have a country list imported in our db.
        %select.country{name: "new_location[country]"}
          %option{value: "0", selected: "selected"} Country
          %optgroup{label: "----------------------", class: "font-11"}
            %option{value: "none"} none
            %option{value: "au"} Australia
            %option{value: "br"} Brazil
            %option{value: "ca"} Canada
            %option{value: "fr"} France
            %option{value: "de"} Germany
            %option{value: "in"} India
            %option{value: "it"} Italy
            %option{value: "jp"} Japan
            %option{value: "gb"} United Kingdom
            %option{value: "us"} United States
            %option{value: "ru"} Russia
          %optgroup{label: "All", class: "font-11"}
            %option{value: "af"} Afghanistan
            %option{value: "al"} Albania
            %option{value: "dz"} Algeria
            %option{value: "as"} American Samoa
            %option{value: "ad"} Andorra
            %option{value: "ao"} Angola
            %option{value: "ai"} Anguilla
            %option{value: "aq"} Antarctica
            %option{value: "ag"} Antigua and Barbuda
            %option{value: "ar"} Argentina
            %option{value: "am"} Armenia
            %option{value: "aw"} Aruba
            %option{value: "au"} Australia
            %option{value: "at"} Austria
            %option{value: "az"} Azerbaijan
            %option{value: "bs"} Bahamas
            %option{value: "bh"} Bahrain
            %option{value: "bd"} Bangladesh
            %option{value: "bb"} Barbados
            %option{value: "by"} Belarus
            %option{value: "be"} Belgium
            %option{value: "bz"} Belize
            %option{value: "bj"} Benin
            %option{value: "bm"} Bermuda
            %option{value: "bt"} Bhutan
            %option{value: "bo"} Bolivia
            %option{value: "ba"} Bosnia and Herzegovina
            %option{value: "bw"} Botswana
            %option{value: "bv"} Bouvet Island
            %option{value: "br"} Brazil
            %option{value: "io"} British Indian Ocean Territory
            %option{value: "bn"} Brunei Darussalam
            %option{value: "bg"} Bulgaria
            %option{value: "bf"} Burkina Faso
            %option{value: "bi"} Burundi
            %option{value: "kh"} Cambodia
            %option{value: "cm"} Cameroon
            %option{value: "ca"} Canada
            %option{value: "cv"} Cape Verde
            %option{value: "ky"} Cayman Islands
            %option{value: "cf"} Central African Republic
            %option{value: "td"} Chad
            %option{value: "cl"} Chile
            %option{value: "cn"} China
            %option{value: "cx"} Christmas Island
            %option{value: "cc"} Cocos (keeling) islands
            %option{value: "co"} Colombia
            %option{value: "km"} Comoros
            %option{value: "cg"} Congo
            %option{value: "cd"} Congo, the democratic republic of the
            %option{value: "ck"} Cook islands
            %option{value: "cr"} Costa Rica
            %option{value: "hr"} Croatia
            %option{value: "cu"} Cuba
            %option{value: "cy"} Cyprus
            %option{value: "cz"} Czech Republic
            %option{value: "dk"} Denmark
            %option{value: "dj"} Djibouti
            %option{value: "dm"} Dominica
            %option{value: "do"} Dominican Republic
            %option{value: "ci"} Dote D'ivoire
            %option{value: "ec"} Ecuador
            %option{value: "eg"} Egypt
            %option{value: "sv"} El Salvador
            %option{value: "gq"} Equatorial Guinea
            %option{value: "er"} Eritrea
            %option{value: "ee"} Estonia
            %option{value: "et"} Ethiopia
            %option{value: "fk"} Falkland Islands (malvinas)
            %option{value: "fo"} Faroe Islands
            %option{value: "fj"} Fiji
            %option{value: "fi"} Finland
            %option{value: "fr"} France
            %option{value: "gf"} French guiana
            %option{value: "pf"} French Polynesia
            %option{value: "tf"} French Southern Territories
            %option{value: "ga"} Gabon
            %option{value: "gm"} Gambia
            %option{value: "ge"} Georgia
            %option{value: "de"} Germany
            %option{value: "gh"} Ghana
            %option{value: "gi"} Gibraltar
            %option{value: "gr"} Greece
            %option{value: "gl"} Greenland
            %option{value: "gd"} Grenada
            %option{value: "gp"} Guadeloupe
            %option{value: "gu"} Guam
            %option{value: "gt"} Guatemala
            %option{value: "gn"} Guinea
            %option{value: "gw"} Guinea-bissau
            %option{value: "gy"} Guyana
            %option{value: "ht"} Haiti
            %option{value: "hm"} Heard Island and McDonald Islands
            %option{value: "va"} Holy See (vatican city state)
            %option{value: "hn"} Honduras
            %option{value: "hk"} Hong Kong
            %option{value: "hu"} Hungary
            %option{value: "is"} Iceland
            %option{value: "in"} India
            %option{value: "id"} Indonesia
            %option{value: "ir"} Iran, Islamic Republic of
            %option{value: "iq"} Iraq
            %option{value: "ie"} Ireland
            %option{value: "il"} Israel
            %option{value: "it"} Italy
            %option{value: "jm"} Jamaica
            %option{value: "jp"} Japan
            %option{value: "jo"} Jordan
            %option{value: "kz"} Kazakhstan
            %option{value: "ke"} Kenya
            %option{value: "ki"} Kiribati
            %option{value: "kp"} Korea, democratic people's republic of
            %option{value: "kr"} Korea, republic of
            %option{value: "kw"} Kuwait
            %option{value: "kg"} Kyrgyzstan
            %option{value: "la"} Lao People's Democratic Republic
            %option{value: "lv"} Latvia
            %option{value: "lb"} Lebanon
            %option{value: "ls"} Lesotho
            %option{value: "lr"} Liberia
            %option{value: "ly"} Libyan Arab Jamahiriya
            %option{value: "li"} Liechtenstein
            %option{value: "lt"} Lithuania
            %option{value: "lu"} Luxembourg
            %option{value: "mo"} Macao
            %option{value: "mk"} Macedonia, the former yugoslav republic of
            %option{value: "mg"} Madagascar
            %option{value: "mw"} Malawi
            %option{value: "my"} Malaysia
            %option{value: "mv"} Maldives
            %option{value: "ml"} Mali
            %option{value: "mt"} Malta
            %option{value: "mh"} Marshall Islands
            %option{value: "mq"} Martinique
            %option{value: "mr"} Mauritania
            %option{value: "mu"} Mauritius
            %option{value: "yt"} Mayotte
            %option{value: "mx"} Mexico
            %option{value: "fm"} Micronesia, Federated States of
            %option{value: "md"} Moldova, Republic of
            %option{value: "mc"} Monaco
            %option{value: "mn"} Mongolia
            %option{value: "ms"} Montserrat
            %option{value: "ma"} Morocco
            %option{value: "mz"} Mozambique
            %option{value: "mm"} Myanmar
            %option{value: "na"} Namibia
            %option{value: "nr"} Nauru
            %option{value: "np"} Nepal
            %option{value: "nl"} Netherlands
            %option{value: "an"} Netherlands Antilles
            %option{value: "nc"} New Caledonia
            %option{value: "nz"} New Zealand
            %option{value: "ni"} Nicaragua
            %option{value: "ne"} Niger
            %option{value: "ng"} Nigeria
            %option{value: "nu"} Niue
            %option{value: "nf"} Norfolk Island
            %option{value: "mp"} Northern Mariana Islands
            %option{value: "no"} Norway
            %option{value: "om"} Oman
            %option{value: "pk"} Pakistan
            %option{value: "pw"} Palau
            %option{value: "ps"} Palestinian Territory, Occupied
            %option{value: "pa"} Panama
            %option{value: "pg"} Papua New Guinea
            %option{value: "py"} Paraguay
            %option{value: "pe"} Peru
            %option{value: "ph"} Philippines
            %option{value: "pn"} Pitcairn
            %option{value: "pl"} Poland
            %option{value: "pt"} Portugal
            %option{value: "pr"} Puerto Rico
            %option{value: "qa"} Qatar
            %option{value: "re"} Reunion
            %option{value: "ro"} Romania
            %option{value: "ru"} Russian Federation
            %option{value: "rw"} Rwanda
            %option{value: "sh"} Saint Helena
            %option{value: "kn"} Saint Kitts and Nevis
            %option{value: "lc"} Saint Lucia
            %option{value: "pm"} Saint Pierre and Miquelon
            %option{value: "vc"} Saint Vincent and the Grenadines
            %option{value: "ws"} Samoa
            %option{value: "sm"} San Marino
            %option{value: "st"} Sao Tome and Principe
            %option{value: "sa"} Saudi Arabia
            %option{value: "sn"} Senegal
            %option{value: "cs"} Serbia and Montenegro
            %option{value: "sc"} Seychelles
            %option{value: "sl"} Sierra Leone
            %option{value: "sg"} Singapore
            %option{value: "sk"} Slovakia
            %option{value: "si"} Slovenia
            %option{value: "sb"} Solomon Islands
            %option{value: "so"} Somalia
            %option{value: "za"} South Africa
            %option{value: "gs"} South Georgia and the South Sandwich Islands
            %option{value: "es"} Spain
            %option{value: "lk"} Sri Lanka
            %option{value: "sd"} Sudan
            %option{value: "sr"} Suriname
            %option{value: "sj"} Svalbard and Jan Mayen
            %option{value: "sz"} Swaziland
            %option{value: "se"} Sweden
            %option{value: "ch"} Switzerland
            %option{value: "sy"} Syrian Arab Republic
            %option{value: "tw"} Taiwan, Province of China
            %option{value: "tj"} Tajikistan
            %option{value: "tz"} Tanzania, United Republic of
            %option{value: "th"} Thailand
            %option{value: "tl"} Timor-Leste
            %option{value: "tg"} Togo
            %option{value: "tk"} Tokelau
            %option{value: "to"} Tonga
            %option{value: "tt"} Trinidad and Tobago
            %option{value: "tn"} Tunisia
            %option{value: "tr"} Turkey
            %option{value: "tm"} Turkmenistan
            %option{value: "tc"} Turks and caicos islands
            %option{value: "tv"} Tuvalu
            %option{value: "ug"} Uganda
            %option{value: "ua"} Ukraine
            %option{value: "ae"} United Arab Emirates
            %option{value: "gb"} United Kingdom
            %option{value: "us"} United States
            %option{value: "um"} United States Minor Outlying Islands
            %option{value: "uy"} Uruguay
            %option{value: "uz"} Uzbekistan
            %option{value: "vu"} Vanuatu
            %option{value: "ve"} Venezuela
            %option{value: "vn"} Viet Nam
            %option{value: "vg"} Virgin Islands, British
            %option{value: "vi"} Virgin Islands, U.S.
            %option{value: "wf"} Wallis and Futuna
            %option{value: "eh"} Western Sahara
            %option{value: "ye"} Yemen
            %option{value: "zm"} Zambia
            %option{value: "zw"} Zimbabwe

        %input{type: 'submit', name: 'save', class: 'save', value: 'save'}

        .cancel Cancel
        .clear





  / CHANGE PASSWORD
  .changePassword.wrapper.showhide
    %h2.trigger.showhide
      %img{src: '/images/icons/key-16.png'}
      Change password

    .changePasswordForm.target.showhide.hidden
      = form_tag :user, :method => :put, :'data-type' => :json, :remote => true do
        = fields_for current_user do |f|
          %p.alert Error message
          = f.password_field(:old_password, {placeholder: 'Current password'})
          %p.alert Error message
          = f.password_field(:password, {placeholder: 'New password'})
          = f.password_field(:password_confirmation, {placeholder: 'Confirm new password'})
          .cancel cancel
          = f.submit :'change password', :class => 'confirm'
          .clear


  /
    FONT SIZING
    .fontSizing
      %h2
        %img{src: '/images/icons/font_size-16.png'}
        Font
      .large A
      .medium A
      .small A
