- content_for :head do
  = sass_link_tag 'entries'
  = stylesheet_link_tag 'jquery.lightbox-0.5.css'

  = javascript_include_tag 'browserdetect', 'jquery-ui.min', 'swfobject'
  = coffeescript_include_tag 'tag', 'showentry', 'fit_to_content'
  
  - if !@entry.body.blank?
    %meta{name: "description", content: "#{simple_format(@entry.body).gsub(%r{</?[^>]+?>}, '')}"}
    
  - if @entry._?.main_image
    %meta{name:"og:image", content:"http://dreamcatcher.net#{@entry.main_image.url(:thumb, :size=> 256)}"}

/ :coffeescript
/   require({baseUrl: "/javascripts"}, [ 'autoresize.jquery.min' ])
/   require({baseUrl: "/javascripts/compiled"}, [ 'tag', 'showentry', 'entries' ] )


/ PRELOAD - SHOW ENTRY
.hidden
  / ARROWS
  %img{src: '/images/icons/arrow-right-16-dark.png'}
  %img{src: '/images/icons/arrow-right-16-light.png'}
  / CLOSE
  %img{src: '/images/icons/close-16-hover.png'}
  %img{src: '/images/icons/close-24-hover.png'}
  / PLAY
  %img{src: '/images/icons/play-16-hover.png'}
  %img{src: '/images/icons/play-16-active.png'}


/ CONTEXT PANEL
= render :partial => "users/context_panel", :locals => {:user => @entry.user}

#entryField{:'data-owner' => @entry.user == current_user ? 'true' : 'false'}

  / SHOW ENTRY
  #showEntry{:'data-id' => @entry.id, :class => @entry.images.blank? ? "noImage" : "" }

    .type= @entry.type

    %a.next{href: user_entry_path(@next.user.username, @next)}
      %span &rsaquo;
    - if session[:lens] == :stream
      %a.stream{href: stream_path} stream
    / - else
    /   %a.stream{href: user_entries_path(@user.username)} entries

    %a.prev{href: user_entry_path(@previous.user.username, @previous)}
      %span &lsaquo;

    - if @entry.user == current_user
      %a.editEntry{href: edit_entry_path(@entry)} edit
      = link_to 'delete', entry_path, :confirm => "Confirm you want to delete this entry:", :method => 'DELETE', :class => "deleteEntry"

    / 
      XXX
      .books My Book of Dreams


    .wrapper
      / HEADER IMAGE & TITLE
      - if @entry.main_image
        .imageHeader.target.fade{style: "background: url(#{dream_header_url(@entry.main_image)}) no-repeat top left"}
        .tagToggle.trigger.fade
      - if location = @entry.location
        #entryLocationMap{style: "position: absolute; display: none; top: 50px; height: 200px;-moz-user-select: none; border-radius: 16px 16px 0 0; clear: both; height: 200px; margin: 0; overflow: hidden; padding: 0px; width: 662px;", 'data-lng'=> "#{location.longitude}", 'data-lat'=> "#{location.latitude}", 'data-city'=> "#{location.city}", 'data-province'=> "#{location.province}"}


      / TAG CLOUD
      .tagCloud
        .toggleWrap
        - @entry.tags.what.limit(16).shuffle.each do |tag|
          %div{ class: "s#{tag.position.to_s}" }= tag.noun.name


    / MOOD ICON
    .moodIcon.hidden
      %img{src: '/images/moods/plants/Fungi.png'}


    / STARLIGHT COUNT & SHARE OPTIONS
    .starlight
      .img
      %span= @entry.starlight


      /
        SAVE FOR LATER
        %hr
        .option.love
        .option.share
        .option.repost.selected



    .content

      .title= @entry.title



      /EMOTIONS DETAILS & THUMBS
      - if @entry.tags.emotion.first
        .emotionsWrap.wrapper

          / EMOTIONS DETAILS
          .emotions-details.target.emotionshowhide.hidden
            .emotionsHeader
              .img
              emotions
            = render :partial => "emotions", :locals => {emotion_tags: @entry.tags.emotion}

          / EMOTIONS THUMB
          .emotions-thumb.trigger.emotionshowhide
            = render :partial => "emotions", :locals => {emotion_tags: @entry.tags.emotion}



      .body= simple_format(@entry.body)
      / VIDEO PANEL
      - @entry.links.youtube.each do |link|
        = render :partial => "video", :locals => {:link => link}

      / IMAGE GALLERY
      %ul.gallery
        - @entry.images.each do |image|
          = gallery_list_item(image)
        - @entry.links.youtube.each do |link|
          = youtube_link(link)
      .clear



      / ENTRY LINKS
      - if (@entry.links - @entry.links.youtube).count >= 1
        .entryLinks
          - (@entry.links - @entry.links.youtube).each do |link|
            .link
              %span
                %a{href: "#{link.url}", target: "_blank"}= link.title
          .clear

      / / ENTRY LINKS - NEW SYNTAX
      / - if (@entry.links - @entry.links.youtube).count >= 1
      /   .entryLinks
      /     - (@entry.links - @entry.links.youtube).each do |link|
      /       %a.link{href: "#{link.url}", target: "_blank"}
      /         %span= link.title
      /     .clear


      / TAG
      .showTags
        .wrapper

          .tagInputWrap
            - if @entry.user == current_user
              .tagHeader.headers
                .img
                tag

              .tagInput.target
                %input#newTag
              .tagThisEntry.trigger
                + add

          / POST INFO - TIME, LOCATION & SHARE LEVEL
          .postInfo

            - if !@entry.everyone?
              .shareLevel
                .img{style: "background: url(/images/icons/sharing-16.png) no-repeat center"}
                %span= @entry.sharing

            .postTime
              - time = (@entry.dreamed_at || @entry.created_at)
              = time_ago_in_words(time)

            - if location = @entry.location
              .postLocation= "#{location.city}, #{location.province}"




          / TAGS
          #tag-list.tag-list.ui-sortable.target

            / PLACEHOLDER TAG JS
            .custom.tag.wrapper.tagWhat.emptyTag.hidden
              .trigger
                %span.tagContent
              .close-16

            / CUSTOM TAGS
            -# TODO: Put eager loading of dictionary words back in.
            - @entry.what_tags.custom.whats.each do |what|
              = render partial: 'tag', locals: {what: what, close_button: (@entry.user == current_user), kind: 'custom'}

            / ANALYSIS TAGS
            -# TODO: Put the eager loading back in!!  Otherwise it's 4 queries per tag. SLOOW.
            -# @entry.what_tags.auto.with_dictionary_words.whats.each do |what|
            - @entry.what_tags.auto.whats.reject{|what| what.dictionary_words.empty?}.each do |what|
              = render partial: 'tag', locals: {what: what, close_button: false, kind: 'auto'}


          #sorting
          .clear


    / HIDDEN FIELD FOR SHOW ENTRY MODE 
    = form_tag do 
      = hidden_field_tag(:show_entry_mode, 1) 




    / COMMENTS
    - unless @comments.count == 0 and current_user.blank?
      .commentsPanel.wrapper
        .trigger.slide
          .commentsHeader.headers
            .img
            <b>comments</b>
            &nbsp; (<span class="counter">#{@comments.count}</span>)
        .clear

        .target.slide
          - @comments.each do |comment|
            = render :partial => "entries/comment", :object => comment

          %a{name: "bottom", href: "#"}

          - if current_user
            .newCommentWrap
              .avatar{style: "background-image: url('#{avatar_image(current_user, 64)}')"}
              .newComment
                / .user= current_user.username
                = form_for [@entry, Comment.new] do |f|
                  = f.hidden_field :user_id, :value => current_user.id
                  = f.text_area :body, :placeholder => "add comment..."
                  = f.submit 'post', :class => 'save'
                  .links.hidden
                    %img{src: '/images/icons/link-16.png', width: '16', height: '16'}
                    links
                  .images.hidden
                    %img{src: '/images/icons/images-16.png', width: '16', height: '16'}
                    image
                  .clear

          .clear
