- content_for :head do
  = sass_link_tag 'entries'
  = stylesheet_link_tag 'jquery.lightbox-0.5.css'
- content_for :foot do
  = javascript_include_tag 'jquery.lightbox-0.5.pack.js', 'autoresize.jquery.min', 'browserdetect'
  = coffeescript_include_tag 'tag', 'showentry', 'entries'


/ CONTEXT PANEL
= render :partial => "users/context_panel", :locals => {:user => @entry.user}



#entryField{:'data-owner' => @entry.user == current_user ? 'true' : 'false'}

  / SHOW ENTRY
  #showEntry{:'data-id' => @entry.id, :class => @entry.images.blank? ? "noImage" : "" }

    .type= @entry.type

    %a.next{href: user_entry_path(@next.user.username, @next)}
      %span &rsaquo;
    / .stream.cancel stream
    %a.prev{href: user_entry_path(@previous.user.username, @previous)}
      %span &lsaquo;

    - if @entry.user == current_user
      %a.editEntry{href: edit_entry_path(@entry)} edit
      = link_to 'delete', entry_path, :confirm => "Confirm you want to delete this entry:", :method => 'DELETE', :class => "deleteEntry"

    / 
      XXX
      .books My Book of Dreams


    .wrapper
      / HEADER IMAGE & TITLE
      .imageHeader.target.fade{style: "background: url(#{dream_header_url(@entry.main_image)}) no-repeat top left"}


      / TAG CLOUD
      .tagCloud
        .toggleWrap
        - @entry.tags.limit(16).shuffle.each do |tag|
          %div{ class: "s#{tag.position.to_s}" }= tag.noun.name

      - if @entry.main_image
        .tagToggle.trigger.fade


    / MOOD ICON
    .moodIcon.hidden
      %img{src: '/images/moods/plants/Fungi.png'}


    / STARLIGHT COUNT & SHARE OPTIONS
    .starlight_share
      %img.starlight{src: '/images/icons/starlight-22.png'}
      %span= @entry.starlight._?.value

      /
        SAVE FOR LATER
        %hr
        .option.love
        .option.share
        .option.repost.selected



    .content
      .title= @entry.title
      .body= simple_format(@entry.body)



      / IMAGE GALLERY
      %ul.gallery
        - @entry.images.each do |image|
          = gallery_list_item(image)
        / - @entry.links.youtube.each do |link|
        /   = youtube_link(link)
      .clear



      / ENTRY LINKS
      - if @entry.links.count >= 1
        .entryLinks
          - (@entry.links - @entry.links.youtube).each do |link|
            .link
              %span
                %a{href: "#{link.url}", target: "_blank"}= link.title
          .clear



      / TAG
      .showTags
        .wrapper

          - if @entry.user == current_user
            .tagHeader.headers
              tag
              %img{src: '/images/icons/tag-20.png'}

            .tagInput.target
              %input#newTag{placeholder: 'who/where/what'}
            .tagThisEntry.trigger
              + add

          / POST TIME & LOCATION
          .postTime
            - time = (@entry.dreamed_at || @entry.created_at)
            = time_ago_in_words(time)
            = render partial: "shared/hover_label", locals: {message: "#{time.strftime('%B %d, %Y')}", x: "40", y: "-18"}

        
          - if location = @entry.location
            .postLocation= "#{location.city}, #{location.province}"


          #tag-list.tag-list.ui-sortable.target

            .emptyTag.hidden
              %span.tagContent
              .close
            - @entry.custom_tags.each do |what|
              .tagWhat.tag{:'data-id' => what.id }
                %span.tagContent= what.name
                - if @entry.user == current_user
                  .close

            / .clear
          #sorting
          .clear


    / COMMENTS
    .commentsPanel
      .trigger.slide
        .commentsHeader.headers
          <b>comments</b>
          %img{src: '/images/icons/comments-16.png', width: '16', height: '16'}
          &nbsp; (<span class="counter">#{@comments.count}</span>)
      .clear
      
      .target.slide
        - @comments.each do |comment|
          = render :partial => "entries/comment", :object => comment
        - if current_user
          .newCommentWrap
            .avatar{style: "background-image: url('#{avatar_image(current_user, 64)}')"}
            .newComment
              .user= current_user.username
              = form_for [@entry, Comment.new], :remote => true do |f|
                = f.hidden_field :user_id, :value => current_user.id
                = f.text_area :body
                = f.submit 'post', :class => 'save'
                .links.hidden
                  %img{src: '/images/icons/link-16.gif', width: '16', height: '16'}
                  links
                .images.hidden
                  %img{src: '/images/icons/eye-images-16.png', width: '19', height: '13'}
                  image
            .clear
        
        .clear

